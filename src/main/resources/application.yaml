# ==== EXTERNAL SERVICES URLs ====
knowledge-map-host: ${KNOWLEDGE_MAP_HOST}
llm-service-host: ${LLM_SERVICE_HOST}

# ==== SERVER CONFIG ====
server:
  port: 8081

# ==== SPRING BOOT CONFIG ====
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    password: ${POSTGRES_PASSWORD}
    username: ${POSTGRES_USER}
  jpa:
    hibernate:
      ddl-auto: ${DB_MODE}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${TOKEN_ISSUER}

# ==== AUTH CONFIG ====
authorization-url: ${AUTHORIZATION_URL}
token-url: ${TOKEN_URL}
com:
  c4-soft:
    springaddons:
      oidc:
        ops:
          - iss: ${TOKEN_ISSUER}
            jwk-set-uri: ${JWT_KEY_LOCATION}
            username-claim: $.preferred_username
            authorities:
              - path: $.realm_access.roles
            aud:
        resourceserver:
          permit-all:
            - /**

# ==== SWAGGER CONFIG ====
springdoc:
  api-docs:
    enabled: true
    resolve-schema-properties: true
    path: /docs/spec
    groups:
      enabled: true
  swagger-ui:
    path: /docs
    enabled: true
    oauth:
      client-id: ${CLIENT_ID}
      client-secret: ${CLIENT_SECRET}
      scopes:
        - openid
  writer-with-default-pretty-printer: true
  group-configs:
    - group: Learning
      packages-to-scan:
        - com.edutie.backend.api.v1.learning
    - group: Management
      packages-to-scan:
        - com.edutie.backend.api.v1.management
    - group: Profiles
      packages-to-scan:
        - com.edutie.backend.api.v1.profiles
    - group: Testing
      packages-to-scan:
        - com.edutie.backend.api.v1.testing
  show-actuator: true
  show-login-endpoint: true
  show-oauth2-endpoints: true
  show-spring-cloud-functions: true
