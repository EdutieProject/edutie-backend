# ==== GENERAL
scheme: http
hostname: localhost
reverse-proxy-port: 7080
reverse-proxy-uri: ${scheme}://${hostname}:${reverse-proxy-port}
authorization-server-prefix: /auth
issuer: ${reverse-proxy-uri}${authorization-server-prefix}/realms/edutie
username-claim-json-path: $.preferred_username
authorities-json-path: $.realm_access.roles
edutie-backend-port: 8081
audience:

# ==== SERVER CONFIG
server:
  port: ${edutie-backend-port}

# ==== SPRING BOOT CONFIG
spring:
  cert: http://localhost:8080/auth/realms/edutie/protocol/openid-connect/certs
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    password: ${POSTGRES_PASSWORD}
    username: ${POSTGRES_USER}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false

# ==== AUTH CONFIG
com:
  c4-soft:
    springaddons:
      oidc:
        ops:
          - iss: ${issuer}
            username-claim: ${username-claim-json-path}
            authorities:
              - path: ${authorities-json-path}
            aud: ${audience}
        resourceserver:
          permit-all:
            - /**
          cors:
            - allowed-origin-patterns:
                - todo?


# ==== SWAGGER CONFIG
springdoc:
  api-docs:
    enabled: true
    resolve-schema-properties: true
    path: /v1/docs
    groups:
      enabled: true
  swagger-ui:
    path: /swagger
    enabled: true
  writer-with-default-pretty-printer: true
  group-configs:
    - group: Learning
      packages-to-scan:
        - com.edutie.backend.api.v1.learning
    - group: Management
      packages-to-scan:
        - com.edutie.backend.api.v1.management
    - group: Authentication - Tests
      packages-to-scan:
        - com.edutie.backend.api.v1.authentication
